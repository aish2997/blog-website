name: Terraform CI/CD

on:
  push:
    branches:
      - main
      - integration

  workflow_dispatch:
    inputs:
      branch_name:
        description: 'Branch name to determine environment'
        required: false
        default: 'main'

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Determine Environment
        id: env
        run: |
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            echo "environment=prod" >> $GITHUB_ENV
          elif [[ "${{ github.ref_name }}" == "integration" ]]; then
            echo "environment=test" >> $GITHUB_ENV
          else
            echo "environment=dev" >> $GITHUB_ENV
          fi

      - name: Load Environment Variables
        id: load_env
        run: |
          echo "Fetching environment variables for ${{ env.environment }}"
          if [[ "${{ env.environment }}" == "prod" ]]; then
            echo "PROJECT_ID=prod-project-id" >> $GITHUB_ENV
            echo "POOL_NAME=prod-pool-name" >> $GITHUB_ENV
            echo "PROVIDER_NAME=prod-provider-name" >> $GITHUB_ENV
          elif [[ "${{ env.environment }}" == "test" ]]; then
            echo "PROJECT_ID=test-project-id" >> $GITHUB_ENV
            echo "POOL_NAME=test-pool-name" >> $GITHUB_ENV
            echo "PROVIDER_NAME=test-provider-name" >> $GITHUB_ENV
          else
            echo "PROJECT_ID=dev-project-id" >> $GITHUB_ENV
            echo "POOL_NAME=dev-pool-name" >> $GITHUB_ENV
            echo "PROVIDER_NAME=dev-provider-name" >> $GITHUB_ENV
          fi

      - name: Authenticate to GCP
        id: auth
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: "projects/${{ env.PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ env.POOL_NAME }}/providers/${{ env.PROVIDER_NAME }}"
          service_account: "github-actions-sa@${{ env.PROJECT_ID }}.iam.gserviceaccount.com"

      - name: Deploy infrastructure
        run: |
          echo "Deploying to ${{ env.environment }} environment"
          gcloud config set project ${{ env.PROJECT_ID }}
          # Add your deployment commands here, e.g., Terraform or gcloud commands

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.5.5  # Use the required Terraform version

      - name: Change working directory to terraform/
        run: cd terraform

      - name: Initialize Terraform
        run: terraform init

      - name: Validate Terraform configuration
        run: terraform validate

      - name: Plan Terraform deployment
        run: terraform plan -out=tfplan

      - name: Apply Terraform configuration
        run: terraform apply -auto-approve tfplan

      - name: Output Terraform state
        run: terraform output
