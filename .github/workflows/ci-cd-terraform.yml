name: Terraform CI/CD

on:
  push:
    branches:
      - main
      - integration

  workflow_dispatch:
    inputs:
      branch_name:
        description: 'Branch name to determine environment'
        required: false
        default: 'main'

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Determine Environment
        id: env
        run: |
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            echo "environment=prod" >> $GITHUB_ENV
            echo "Fetching environment variables for ${{ env.environment }}"
            echo "PROJECT_ID=${{ env.PROJECT_ID }}" >> $GITHUB_ENV
            echo "POOL_NAME=${{ env.POOL_NAME }}" >> $GITHUB_ENV
            echo "PROVIDER_NAME=${{ env.PROVIDER_NAME }}" >> $GITHUB_ENV
            echo "TFVARS_FILE=terraform/_prod.tfvars" >> $GITHUB_ENV
          elif [[ "${{ github.ref_name }}" == "integration" ]]; then
            echo "environment=test" >> $GITHUB_ENV
            echo "Fetching environment variables for ${{ env.environment }}"
            echo "PROJECT_ID=${{ env.PROJECT_ID }}" >> $GITHUB_ENV
            echo "POOL_NAME=${{ env.POOL_NAME }}" >> $GITHUB_ENV
            echo "PROVIDER_NAME=${{ env.PROVIDER_NAME }}" >> $GITHUB_ENV
            echo "TFVARS_FILE=terraform/_test.tfvars" >> $GITHUB_ENV
          else
            echo "environment=dev" >> $GITHUB_ENV
            echo "PROJECT_ID=${{ env.PROJECT_ID }}" >> $GITHUB_ENV
            echo "POOL_NAME=${{ env.POOL_NAME }}" >> $GITHUB_ENV
            echo "PROVIDER_NAME=${{ env.PROVIDER_NAME }}" >> $GITHUB_ENV
            echo "TFVARS_FILE=terraform/_dev.tfvars" >> $GITHUB_ENV
          fi

      - name: Authenticate to GCP
        id: auth
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: "projects/${{ env.PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ env.POOL_NAME }}/providers/${{ env.PROVIDER_NAME }}"
          service_account: "github-actions-sa@${{ env.PROJECT_ID }}.iam.gserviceaccount.com"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.5.0'

      - name: Terraform Init
        run: |
          terraform init -backend-config="bucket=${{ env.PROJECT_ID }}-terraform-state" -backend-config="prefix=${{ env.environment }}/terraform/state" -backend-config="project=${{ env.PROJECT_ID }}" ./terraform/

      - name: Terraform Validate
        run: |
          terraform validate -var-file=${{ env.TFVARS_FILE }} ./terraform/

      - name: Terraform Format Check
        run: |
          terraform fmt -check -var-file=${{ env.TFVARS_FILE }} ./terraform/

      - name: Terraform Plan
        run: |
          terraform plan -var-file=${{ env.TFVARS_FILE }} -out=tfplan ./terraform/

      - name: Terraform Apply
        run: |
          terraform apply -var-file=${{ env.TFVARS_FILE }} -auto-approve ./terraform/